openapi: 3.1.0
info:
  version: 0.0.1
  title: Athenz client sidecar API
  contact:
    email: "cncf-athenz-maintainers@lists.cncf.io"
    name: Athenz
    url: https://www.athenz.io/contact.html
  license:
    name: Apache 2.0
    identifier: Apache-2.0
    url: https://github.com/AthenZ/k8s-athenz-sia/blob/main/LICENSE
servers:
  - description: localhost
    url: http://localhost:8080
paths:
  /roletoken:
    post:
      summary: Fetch cached role token
      operationId: FetchRoleToken
      requestBody:
        $ref: '#/components/requestBodies/rtRequestBody'
      responses:
        "200":
          $ref: '#/components/responses/rtResponse'
        "500":
          $ref: '#/components/responses/InternalServerError'
components:
  requestBodies:
    rtRequestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RoleTokenRequestBody'
          examples:
            sample:
              value:
                domain: domain
                role: role
                proxy_for_principal: ""
                min_expiry: 100
                max_expiry: 1000
  responses:
    # MethodNotAllowed:
    #   description: Method Not Allowed
    #   content:
    #     "*/*":
    #       examples:
    #         sample:
    #           value: Method Not Allowed
    InternalServerError:
      description: Internal Server Error (includes token not found, errors in requesting Athenz ZTS server, and other internal errors)
      content:
        "*/*":
          examples:
            sample:
              value: Internal Server Error
    rtResponse:
      description: role token response
      content: 
        application/json:
          schema:
            $ref: '#/components/schemas/RoleTokenResponse'
          examples:
            sample:
              value:
                expiryTime: 1528860825
                token: v=Z1;d=domain.shopping;r=users;p=domain.travel.travel-site;h=athenz.co.jp;a=9109ee08b79e6b63;t=1528853625;e=1528860825;k=0;i=192.168.1.1;s=<signature>
  schemas:
    RoleTokenRequestBody:
      type: object
      required:
        - domain
        - role
      properties:
        domain:
          description: Role token domain name
          minLength: 1
          type: string
        role:
          description: Role token role name (comma separated list)
          minLength: 1
          type: string
        proxy_for_principal:
          description: Role token proxyForPrincipal name
          type: string
        min_expiry:
          description: Role token minimum expiry time (in second)
          type: integer
        max_expiry:
          description: Role token maximum expiry time (in second)
          type: integer
    RoleTokenResponse:
      type: object
      required:
        - expiryTime
        - token
      properties:
        token:
          description: Role token string
          type: string
        expiryTime:
          description: Role token expiry time (Unix timestamp in second)
          type: integer
          x-go-type: int64
